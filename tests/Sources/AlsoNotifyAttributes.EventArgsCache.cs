namespace NuExt.Minimal.Mvvm.SourceGenerator.Tests
{
    internal static partial class AlsoNotifyAttributes
    {
        public static List<(string source, string? expected)> EventArgsCacheSources =
        [
            (
                source : """
                         using Minimal.Mvvm;

                         public partial class PersonModel : BindableBase
                         {
                            [Notify, AlsoNotify(nameof(FullName))]
                            private string? _name;

                            [Notify, AlsoNotify(nameof(FullName))]
                            private string? _surname;

                            [Notify, AlsoNotify(nameof(FullName))]
                            private string? _middleName;

                            public string FullName => $"{Surname} {Name} {MiddleName}";
                         }
                         """,
                expected : """
                            // <auto-generated>
                            //     Auto-generated by [GeneratorName] [GeneratorVersion]
                            // </auto-generated>

                            #nullable enable

                            partial class PersonModel
                            {
                                public string? Name
                                {
                                    get => _name;
                                    set
                                    {
                                        if (SetProperty(ref _name, value, global::Minimal.Mvvm.EventArgsCache.NamePropertyChanged))
                                        {
                                            RaisePropertyChanged(global::Minimal.Mvvm.EventArgsCache.FullNamePropertyChanged);
                                        }
                                    }
                                }
                           
                                public string? Surname
                                {
                                    get => _surname;
                                    set
                                    {
                                        if (SetProperty(ref _surname, value, global::Minimal.Mvvm.EventArgsCache.SurnamePropertyChanged))
                                        {
                                            RaisePropertyChanged(global::Minimal.Mvvm.EventArgsCache.FullNamePropertyChanged);
                                        }
                                    }
                                }

                                public string? MiddleName
                                {
                                    get => _middleName;
                                    set
                                    {
                                        if (SetProperty(ref _middleName, value, global::Minimal.Mvvm.EventArgsCache.MiddleNamePropertyChanged))
                                        {
                                            RaisePropertyChanged(global::Minimal.Mvvm.EventArgsCache.FullNamePropertyChanged);
                                        }
                                    }
                                }
                            }
                            """ ),
               (
                source : """
                         using Minimal.Mvvm;
                         using System;

                         public partial class PersonModel : BindableBase
                         {
                            [Notify]
                            [AlsoNotify(nameof(Age), nameof(YearsToRetirement))]
                            private DateTime _birthDate;

                            public int Age => DateTime.Now.Year - BirthDate.Year;

                            public int YearsToRetirement => 65 - Age;
                         }
                         """,
                expected : """
                            // <auto-generated>
                            //     Auto-generated by [GeneratorName] [GeneratorVersion]
                            // </auto-generated>

                            #nullable enable

                            partial class PersonModel
                            {
                                public global::System.DateTime BirthDate
                                {
                                    get => _birthDate;
                                    set
                                    {
                                        if (SetProperty(ref _birthDate, value, global::Minimal.Mvvm.EventArgsCache.BirthDatePropertyChanged))
                                        {
                                            RaisePropertiesChanged(global::Minimal.Mvvm.EventArgsCache.AgePropertyChanged, global::Minimal.Mvvm.EventArgsCache.YearsToRetirementPropertyChanged);
                                        }
                                    }
                                }
                            }
                            """ ),
            (
                source : """
                         using Minimal.Mvvm;

                         public partial class PersonModel : BindableBase
                         {
                            [Notify]
                            [AlsoNotify(nameof(Taxes), nameof(NetSalary), nameof(AnnualSalary))]
                            private decimal _salary;

                            [Notify]
                            [AlsoNotify(nameof(Taxes))]
                            [AlsoNotify(nameof(NetSalary))]
                            [AlsoNotify(nameof(AnnualSalary))]
                            private decimal _taxRate = 0.2m; 
                         
                            public decimal Taxes => Salary * TaxRate;
                         
                            public decimal NetSalary => Salary - Taxes;

                            public decimal AnnualSalary => NetSalary * 12; 
                         }
                         """,
                expected : """
                           // <auto-generated>
                           //     Auto-generated by [GeneratorName] [GeneratorVersion]
                           // </auto-generated>

                           #nullable enable

                           partial class PersonModel
                           {
                               public decimal Salary
                               {
                                   get => _salary;
                                   set
                                   {
                                       if (SetProperty(ref _salary, value, global::Minimal.Mvvm.EventArgsCache.SalaryPropertyChanged))
                                       {
                                           RaisePropertiesChanged(global::Minimal.Mvvm.EventArgsCache.TaxesPropertyChanged, global::Minimal.Mvvm.EventArgsCache.NetSalaryPropertyChanged, global::Minimal.Mvvm.EventArgsCache.AnnualSalaryPropertyChanged);
                                       }
                                   }
                               }
                           
                               public decimal TaxRate
                               {
                                   get => _taxRate;
                                   set
                                   {
                                       if (SetProperty(ref _taxRate, value, global::Minimal.Mvvm.EventArgsCache.TaxRatePropertyChanged))
                                       {
                                           RaisePropertiesChanged(global::Minimal.Mvvm.EventArgsCache.TaxesPropertyChanged, global::Minimal.Mvvm.EventArgsCache.NetSalaryPropertyChanged, global::Minimal.Mvvm.EventArgsCache.AnnualSalaryPropertyChanged);
                                       }
                                   }
                               }
                           }
                           """ ),
            (
                source : """
                         using Minimal.Mvvm;
                         using System;

                         public partial class PersonModel : BindableBase
                         {
                            [Notify(CallbackName = nameof(OnSalaryChanged))]
                            [AlsoNotify]
                            [AlsoNotify("")]
                            [AlsoNotify(nameof(Taxes), nameof(NetSalary), nameof(AnnualSalary))]
                            private decimal _salary;
                         
                            [AlsoNotify]
                            [AlsoNotify("")]
                            [Notify(CallbackName = nameof(OnTaxRateChanged))]
                            [AlsoNotify(nameof(Taxes))]
                            [AlsoNotify(nameof(NetSalary))]
                            [AlsoNotify(nameof(Taxes), nameof(NetSalary), nameof(AnnualSalary))]
                            [AlsoNotify(nameof(AnnualSalary))]
                            private decimal _taxRate = 0.2m; 
                         
                            public decimal Taxes => Salary * TaxRate;
                         
                            public decimal NetSalary => Salary - Taxes;
                         
                            public decimal AnnualSalary => NetSalary * 12;

                            private void OnSalaryChanged(decimal oldSalary)
                            {
                                Console.WriteLine($"Salary changed from {oldSalary} to {Salary}");
                            }

                            private void OnTaxRateChanged()
                            {
                                Console.WriteLine($"New TaxRate: {TaxRate}");
                            }
                         }
                         """,
                expected : """
                           // <auto-generated>
                           //     Auto-generated by [GeneratorName] [GeneratorVersion]
                           // </auto-generated>

                           #nullable enable

                           partial class PersonModel
                           {
                               private global::System.Action<decimal>? _salaryChangedCallback;
                               public decimal Salary
                               {
                                   get => _salary;
                                   set
                                   {
                                       if (SetProperty(ref _salary, value, _salaryChangedCallback ??= OnSalaryChanged, global::Minimal.Mvvm.EventArgsCache.SalaryPropertyChanged))
                                       {
                                           RaisePropertiesChanged(global::Minimal.Mvvm.EventArgsCache.TaxesPropertyChanged, global::Minimal.Mvvm.EventArgsCache.NetSalaryPropertyChanged, global::Minimal.Mvvm.EventArgsCache.AnnualSalaryPropertyChanged);
                                       }
                                   }
                               }

                               private global::System.Action? _taxRateChangedCallback;
                               public decimal TaxRate
                               {
                                   get => _taxRate;
                                   set
                                   {
                                       if (SetProperty(ref _taxRate, value, _taxRateChangedCallback ??= OnTaxRateChanged, global::Minimal.Mvvm.EventArgsCache.TaxRatePropertyChanged))
                                       {
                                           RaisePropertiesChanged(global::Minimal.Mvvm.EventArgsCache.TaxesPropertyChanged, global::Minimal.Mvvm.EventArgsCache.NetSalaryPropertyChanged, global::Minimal.Mvvm.EventArgsCache.AnnualSalaryPropertyChanged);
                                       }
                                   }
                               }
                           }
                           """ ),
        ];
    }
}
